---
import windowsLogo from "../assets/windows.svg";
import linuxLogo from "../assets/linux.svg";
import macLogo from "../assets/mac.svg";
import iosLogo from "../assets/ios.svg";
import androidLogo from "../assets/android.svg";
const { title, img, genres, platforms, release, price } = Astro.props;
---

<section
  class="block py-2 px-4 my-16 rounded md:mx-auto bg-neutral-700 md:w-[calc(100dvw-1rem)] md:max-w-[101rem]"
  id={title}
>
  <h2 class="text-2xl font-bold text-white">
    {
      typeof title === "string" ? (
        title
      ) : (
        <img src={title.src} alt={title.alt} class="h-24 aspect-auto" />
      )
    }
  </h2>
  <br />
  <p>Release: {release}</p>
  {price ? <p>Release: {price}</p> : null}
  <p>
    Platforms: <span
      class="inline-grid grid-rows-1 grid-flow-col auto-cols-auto gap-2 w-fit"
      >{
        platforms.map((x) => (
          <img
            class="inline-block h-4 aspect-auto"
            src={
              x === "windows"
                ? windowsLogo.src
                : x === "linux"
                  ? linuxLogo.src
                  : x === "mac"
                    ? macLogo.src
                    : x === "android"
                      ? androidLogo.src
                      : x === "ios"
                        ? iosLogo.src
                        : ""
            }
          />
        ))
      }</span
    >
  </p>
  <p>
    Genres: {genres.map((x, i) => <span>{(i !== 0 ? ", " : "") + x}</span>)}
  </p>
  <br />
  <slot />
  {
    Array.isArray(img) ? (
      <div class="flex overflow-x-auto relative flex-row gap-8 w-full overflow-y-clip">
        {img.map((x) =>
          x.startsWith("https://") ? (
            <iframe
              class="block my-4 h-64 aspect-auto"
              width="560"
              height="315"
              src={x}
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
              referrerpolicy="strict-origin-when-cross-origin"
              allowfullscreen
            />
          ) : x.endsWith(".mp4") ? (
            <video controls class="block my-4 h-64 aspect-auto">
              <source src={x} type="video/mp4" />
            </video>
          ) : (
            <img class="block my-4 h-64 aspect-auto" src={x} class="block" />
          ),
        )}
      </div>
    ) : (
      <img class="block h-32 aspect-auto" src={img} class="block" />
    )
  }
</section>
